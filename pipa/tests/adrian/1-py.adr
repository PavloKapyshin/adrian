py#print(py#Int(0))
py#print()

py#print(py#Str("Hello, world!"))
py#print()

py#print(py#List([]))
py#print(py#List([py#Int(1)]))
py#print()

py#print(py#Set({}))
py#print(py#Set({py#Int(1)}))
py#print()

py#print(py#Dict({}))
py#print(py#Dict({py#Str("Hello") = py#Int(0)}))
py#print()

py#print(py#List([py#Int(1), py#Int(2)]))
py#print(py#List([py#Int(1), py#Str("Hello"), py#List([py#Int(1)])]))
py#print()

py#print(py#Str("Hello, John").split(py#Str(", ")))
py#print()

py#print(py#Int(1) + py#Int(2))
py#print(py#Int(1) - py#Int(2))
py#print(py#Int(3) * py#Int(2))
py#print(py#Int(4) / py#Int(2))
py#print((py#Int(6) + py#Int(3) * py#Int(2)) / 2)
py#print(py#Str("Hello, ") + py#Str("Mike"))
py#print(py#List([py#Int(1)]) + py#List([py#Int(2), py#Int(3)]))
py#print(py#Set(
    {py#Int(1), py#Int(2)}) + py#Set({py#Int(2), py#Int(3)}))
py#print(py#Dict(
    {py#Str("Hi") = py#Int(1)}) + py#Dict({}))
py#print()

py#print(py#Dict({py#Str("Hello") = py#Int(1)}).values())
py#print(py#Dict({py#Str("Hello") = py#Int(1)}).keys())
py#print()

py#print(py#toStr(py#Int(4)) + py#Str(" years"))
py#print(py#toInt(py#Str("23")) + py#Int(1))
py#print(py#toSet(py#List([py#Int(1), py#Int(2), py#Int(3)])))
py#print(py#toList(py#Set({py#Int(1)})))
py#print()

py#print(py#len(py#List([py#Int(1), py#Int(2), py#Int(3)])))
py#print()

-- Iteration
py#print(py#Str("Iteration:"))
for char in py#Str("NOOB") {
    py#print(char)
}
py#print()

for number in py#List([py#Int(0), py#Int(1), py#Int(2)]) {
    py#print(number)
}
py#print()

for number in py#Set({py#Int(1)}) {
    py#print(number)
}
py#print()

for key in py#Dict({py#Str("Hello") = py#Int(1)}) {
    py#print(key)
}
py#print()

for key, val in py#Dict({py#Str("Hello") = py#Int(1)}).items() {
    py#print(key, py#Str(" = "), val)
}
py#print()

-- Boolean expressions
py#print(py#Str("Boolean expressions:"))
---- ==, !=
py#print(py#Str("==, !=:"))
py#print(py#Int(1) == py#Int(1))
py#print(py#Int(1) == py#Int(2))
py#print(py#Int(1) != py#Int(1))
py#print(py#Int(1) != py#Int(2))

py#print()

---- <, >
py#print(py#Str("<, >:"))
py#print(py#Int(1) < py#Int(2))
py#print(py#Int(5) < py#Int(2))
py#print(py#Int(1) > py#Int(2))
py#print(py#Int(5) > py#Int(2))

py#print()

---- <=, >=
py#print(py#Str("<=, >=:"))
py#print(py#Int(1) <= py#Int(1))
py#print(py#Int(5) <= py#Int(2))
py#print(py#Int(1) >= py#Int(1))
py#print(py#Int(5) >= py#Int(2))

py#print()

-- in
py#print(py#Str("in:"))
py#print(py#Str("H") in py#Str("Hello!"))
py#print(py#Str("a") in py#Str("Hello!"))
py#print(py#Int(2) in py#List([py#Str("Hello!"), py#Int(2)]))
py#print(py#Str("a") in py#Set({py#Str("Hello!")}))
py#print(py#Int(2) in py#Dict({py#Int(2) = py#Str("Hello!")}))

py#print()

-- getItem, setItem
py#print(py#Str("getItem, setItem:"))
let getitemList = py#List([py#Int(1), py#Int(2), py#Int(3)])
py#print(getitemList[py#Int(0)])
py#print(getitemList[py#Int(-1)])
let getitemDict = py#Dict({py#Str("A") = py#Int(1), py#Str("B") = py#Int(2)})
py#print(getitemDict[py#Str("A")])

py#print()

var myList = py#List([py#Int(1), py#Int(1), py#Int(2)])
py#print(myList)
myList[py#Int(0)] += py#Int(5)
py#print(myList)
myList[py#Int(0)] = py#Int(5)
py#print(myList)
