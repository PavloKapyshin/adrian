let microSyntax = {
    lexers#OneOrMore(lexers#NumberCombinator()) = "NUMBER",
    lexers#OneOrMore(lexers#Or([lexers#LowerCaseLetter(), lexers#UpperCaseLetter()])) = "NAME",
    lexers#And([
        lexers#Char("'"),
        lexers#AnyChar(["'"]),
        lexers#Char("'")
    ]) = "STRING"
}

for (char, lexemeType) in [
            Pair("(", "LEFT_PAREN"),
            Pair(")", "RIGHT_PAREN"),
            Pair(":", "COLON"),
            Pair("{", "LEFT_BRACE"),
            Pair("}", "RIGHT_BRACE"),
        ] {
    microSyntax[lexers#Char(char)] = lexemeType
}


let lexer = lexers#CombinatorLexer(
    microSyntax, ignoreList = [" ", "\n"], keywords = ["fun", "return"])


let lexingResult = lexer.lex("fun name(): Number {\nreturn$ 0\n}\n")
if lexingResult is Right {
    for (text, type) in lexingResult.data {
        print(" ".join([text, type]))
    }
} else {
    print(lexingResult.data)
}
