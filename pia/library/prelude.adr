-- Core library. Don't use syntax sugar here.

struct Some(a) {
    data: a
}

struct None {}

adt Maybe(a) {
    Some(a), None
}


struct String {
    data: py#Str
}

protocol ConvertibleToString {
    fun __toString__(): String
}


fun print(source: ConvertibleToString): Void {
    py#print(source.__toString__().data)
}


struct Number is ConvertibleToString {
    data: py#Int

    fun __toString__(): Void {
        return String(py#toStr(self.data))
    }
}

struct Vector(a) {
    data: py#List

    fun append(element: a): Void {
        self.data.append(element)
    }

    fun __getitem__(index: Number): Maybe(a) {
        let got: py#Maybe = self.data[index]
        if got is py#None {
            return Maybe.None()
        }
        return Maybe.Some(got)
    }
}
