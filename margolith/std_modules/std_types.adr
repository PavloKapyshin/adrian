struct String {
    length: c#Int64
    string: c#String

    fun init(string: c#String) {
        self.string = string
        self.length = c#strlen(string)
    }

    fun del(index: c#Int64): None {}
    fun get(index: c#Int64): c#Char {}
    fun push(index: c#Int64; char: c#Char): None {}

    fun reverse(): String {}
}


cst ZERO_SIGN = 1
cst POSITIVE_SIGN = 2
cst NEGATIVE_SIGN = 3


struct Integer {
    sign: c#Int32
    digits: c#String

    fun init(digits: c#String) {
        -- only positive integers and zero are supported
        self.digits = digits
        iff self.digits == c#String("0") {
            self.sign = ZERO_SIGN
        } else {
            self.sign = POSITIVE_SIGN
        }
    }

    fun add(int1, int2: Integer): Integer {}
    fun sub(int1, int2: Integer): Integer {}
    fun mul(int1, int2: Integer): Integer {}
    fun divFloat(int1, int2: Integer): Float {}
    fun divInteger(int1, int2: Integer): Integer {}
}